{"version":3,"sources":["components/Editor.jsx","Hooks/useLocalStorage.jsx","App.js","index.js"],"names":["Editor","props","language","onChange","value","blockName","useState","open","setOpen","className","height","width","onClick","x1","y1","x2","y2","style","stroke","strokeWidth","onBeforeChange","editor","data","lineWrapping","lint","mode","theme","lineNumbers","autocorrect","spellcheck","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","js","setJs","css","setCss","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QA6DeA,MArDf,SAAgBC,GAAQ,IAAD,EACbC,EAAyCD,EAAzCC,SAAUC,EAA+BF,EAA/BE,SAAUC,EAAqBH,EAArBG,MAAOC,EAAcJ,EAAdI,UADd,EAEGC,oBAAS,GAFZ,mBAEdC,EAFc,KAERC,EAFQ,KAQrB,OACE,yBAAKC,UAAS,UAAKF,EAAO,SAAW,cACnC,yBAAKE,UAAU,eACZJ,EAGD,yBAAMK,OAAO,KAAKC,MAAM,KAAKC,QAAS,kBAAMJ,GAASD,KACnD,0BACEM,GAAG,IACHC,GAAG,IACHC,GAAG,KACHC,GAAG,KACHC,MAAO,CAAEC,OAAQ,QAASC,YAAa,OAEzC,0BACEN,GAAG,IACHC,GAAG,KACHC,GAAG,KACHC,GAAG,IACHC,MAAO,CAAEC,OAAQ,QAASC,YAAa,OAb3C,qDAoBF,kBAAC,cAAD,GACEV,UAAU,SACVW,eAhCgB,SAACC,EAAQC,EAAMlB,GACnCD,EAASC,KA6BP,0BAGY,uBAHZ,sBAISA,GAJT,wBAKW,CACPmB,cAAc,EACdC,MAAM,EACNC,KAAMvB,EACNwB,MAAO,WACPC,aAAa,EACbC,aAAa,EACbC,YAAY,IAZhB,MCtCS,SAASC,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAD4B,EAG/BzB,oBAAS,WACjC,IAAM4B,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACFA,IAEAA,KAV8C,mBAGlD5B,EAHkD,KAG3CmC,EAH2C,KAkBzD,OAJAC,qBAAU,WACRL,aAAaM,QAAQR,EAAaI,KAAKK,UAAUtC,MAChD,CAAC6B,EAAa7B,IAEV,CAACA,EAAOmC,GCsCFI,MAvDf,WAAgB,IAAD,EACUb,EAAgB,OAAO,IADjC,mBACNc,EADM,KACAC,EADA,OAEOf,EAAgB,KAAK,IAF5B,mBAENgB,EAFM,KAEFC,EAFE,OAGSjB,EAAgB,MAAM,IAH/B,mBAGNkB,EAHM,KAGDC,EAHC,OAIe3C,mBAAS,IAJxB,mBAIN4C,EAJM,KAIEC,EAJF,KAmBb,OAbAX,qBAAU,WACR,IAAIY,EAAUC,YAAW,WACvBF,EAAU,iCAAD,OAECP,EAFD,mCAGEI,EAHF,qCAIGF,EAJH,wCAOR,KACH,OAAO,kBAAKQ,aAAaF,MACxB,CAACR,EAAME,EAAIE,IAGZ,oCACE,yBAAKvC,UAAU,aACb,kBAAC,EAAD,CACEP,SAAS,MACTC,SAAU0C,EACVzC,MAAOwC,EACPvC,UAAU,SAEZ,kBAAC,EAAD,CACEH,SAAS,MACTC,SAAU8C,EACV7C,MAAO4C,EACP3C,UAAU,QAEZ,kBAAC,EAAD,CACEH,SAAS,aACTC,SAAU4C,EACV3C,MAAO0C,EACPzC,UAAU,QAGd,yBAAKI,UAAU,UACb,4BACE8C,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZ9C,MAAM,OACND,OAAO,OACPwC,OAAQA,OChDlBQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.2d00c345.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\n\nfunction Editor(props) {\n  const { language, onChange, value, blockName } = props;\n  const [open, setOpen] = useState(true);\n\n  const changeHandler = (editor, data, value) => {\n    onChange(value);\n  };\n\n  return (\n    <div className={`${open ? \"editor\" : \"collapsed\"}`}>\n      <div className=\"block-title\">\n        {blockName}\n        {/* <button className=\"expand-collapse-btn\" onClick={() => setOpen(!open)}> */}\n         \n        <svg  height=\"30\" width=\"20\" onClick={() => setOpen(!open)}>\n          <line\n            x1=\"0\"\n            y1=\"0\"\n            x2=\"12\"\n            y2=\"12\"\n            style={{ stroke: \"white\", strokeWidth: \"2\" }}\n          />\n          <line\n            x1=\"0\"\n            y1=\"12\"\n            x2=\"12\"\n            y2=\"0\"\n            style={{ stroke: \"white\", strokeWidth: \"2\" }}\n          />\n          Sorry, your browser does not support inline SVG.\n        </svg>\n        {/* </button> */}\n\n      </div>\n      <ControlledEditor\n        className=\"editor\"\n        onBeforeChange={changeHandler}\n        className=\"code-mirror-wrapper\"\n        value={value}\n        options={{\n          lineWrapping: true,\n          lint: true,\n          mode: language,\n          theme: \"material\",\n          lineNumbers: true,\n          autocorrect: true,\n          spellcheck: true,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Editor;\n","import { useEffect, useState } from 'react'\n\nconst PREFIX = 'codepen-clone-'\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key\n\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n    if (jsonValue != null) return JSON.parse(jsonValue)\n\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Editor from './components/Editor';\nimport useLocalStorage from './Hooks/useLocalStorage';\n\nfunction App() {\n  const [html, setHtml] =useLocalStorage('html','');\n  const [js, setJs] = useLocalStorage('js','');\n  const [css, setCss] = useLocalStorage('css','');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    let timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n      `)\n    }, 300)\n    return () =>clearTimeout(timeout);\n  }, [html, js, css])\n\n  return (\n    <>\n      <div className='top-panel'>\n        <Editor\n          language='xml'\n          onChange={setHtml}\n          value={html}\n          blockName='HTML'\n        />\n        <Editor\n          language='css'\n          onChange={setCss}\n          value={css}\n          blockName='CSS'\n        />\n        <Editor\n          language='javascript'\n          onChange={setJs}\n          value={js}\n          blockName='JS'\n        />\n      </div>\n      <div className=\"output\">\n        <iframe\n          title=\"output\"\n          sandbox='allow-scripts'\n          frameBorder='0'\n          width=\"100%\"\n          height=\"100%\"\n          srcDoc={srcDoc}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}